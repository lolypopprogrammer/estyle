/**
 * eStyle server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { QuizGoal } from './quizGoal';
import { QuizMeasurements } from './quizMeasurements';
import { QuizFeatures } from './quizFeatures';


export interface Quiz { 
    id: string;
    user: string;
    goals: QuizGoal;
    measurements: QuizMeasurements;
    fatures: QuizFeatures;
    personalityAnswers: Array<Quiz.PersonalityAnswersEnum>;
    verticalBodyShape: Quiz.VerticalBodyShapeEnum;
    horizontalBodyShape: Quiz.HorizontalBodyShapeEnum;
    heightCategory: Quiz.HeightCategoryEnum;
    neckSizeCategory: Quiz.NeckSizeCategoryEnum;
    bmi: Quiz.BmiEnum;
}
export namespace Quiz {
    export type PersonalityAnswersEnum = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g';
    export const PersonalityAnswersEnum = {
        A: 'a' as PersonalityAnswersEnum,
        B: 'b' as PersonalityAnswersEnum,
        C: 'c' as PersonalityAnswersEnum,
        D: 'd' as PersonalityAnswersEnum,
        E: 'e' as PersonalityAnswersEnum,
        F: 'f' as PersonalityAnswersEnum,
        G: 'g' as PersonalityAnswersEnum
    };
    export type VerticalBodyShapeEnum = 'longLegsShortTorso' | 'shortLegsLongTorso' | 'balanced';
    export const VerticalBodyShapeEnum = {
        LongLegsShortTorso: 'longLegsShortTorso' as VerticalBodyShapeEnum,
        ShortLegsLongTorso: 'shortLegsLongTorso' as VerticalBodyShapeEnum,
        Balanced: 'balanced' as VerticalBodyShapeEnum
    };
    export type HorizontalBodyShapeEnum = 'hourglass' | 'triangular' | 'rectangular' | 'invertedTriangular' | 'diamond' | 'oval';
    export const HorizontalBodyShapeEnum = {
        Hourglass: 'hourglass' as HorizontalBodyShapeEnum,
        Triangular: 'triangular' as HorizontalBodyShapeEnum,
        Rectangular: 'rectangular' as HorizontalBodyShapeEnum,
        InvertedTriangular: 'invertedTriangular' as HorizontalBodyShapeEnum,
        Diamond: 'diamond' as HorizontalBodyShapeEnum,
        Oval: 'oval' as HorizontalBodyShapeEnum
    };
    export type HeightCategoryEnum = 'petite' | 'small' | 'medium' | 'tall';
    export const HeightCategoryEnum = {
        Petite: 'petite' as HeightCategoryEnum,
        Small: 'small' as HeightCategoryEnum,
        Medium: 'medium' as HeightCategoryEnum,
        Tall: 'tall' as HeightCategoryEnum
    };
    export type NeckSizeCategoryEnum = 'small' | 'medium' | 'long';
    export const NeckSizeCategoryEnum = {
        Small: 'small' as NeckSizeCategoryEnum,
        Medium: 'medium' as NeckSizeCategoryEnum,
        Long: 'long' as NeckSizeCategoryEnum
    };
    export type BmiEnum = 'veryThin' | 'normal' | 'Overweight';
    export const BmiEnum = {
        VeryThin: 'veryThin' as BmiEnum,
        Normal: 'normal' as BmiEnum,
        Overweight: 'Overweight' as BmiEnum
    };
}


